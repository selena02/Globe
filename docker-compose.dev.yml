version: "3.8"

services:
  api:
    build:
      context: ./server/src
      dockerfile: API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ALLOW_DEV_ORIGIN=true
      - ConnectionStrings__DefaultConnection=Server=db;Port=5432;User Id=postgres;Password=dev_password;Database=globe_dev
      - TokenKey=YourTokenKeyHereThatMustBeAtLeast64CharactersLongAndCanBeAnyStringYouWantJustMakeSureItsSecureAndLongEnoughForYourNeedsMaybeEvenLongerThan64CharactersHopefullyThisIsLongEnough
      - CLOUDINARY_NAME=${CLOUDINARY_NAME}
      - CLOUDINARY_KEY=${CLOUDINARY_KEY}
      - CLOUDINARY_SECRET=${CLOUDINARY_SECRET}
      - GEOCODER_API_KEY=${GEOCODER_API_KEY}
    depends_on:
      - db
    ports:
      - "8080:80"

  react:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3000:80"
    depends_on:
      - api

  db:
    container_name: postgres_globe_dev
    image: postgres
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=globe_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_globe_data_dev:/var/lib/postgresql/data

  globe-model:
    build: ./model
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.api:create_app
      FLASK_ENV: production
      PYTHONUNBUFFERED: 1
    container_name: globe-model

volumes:
  postgres_globe_data_dev:
